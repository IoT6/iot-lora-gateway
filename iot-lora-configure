#!/usr/bin/python3
# IOT LoRa Gateway Configuration Script,
# Setup Dialog Box
from dialog import Dialog
import getpass
import shutil
import codecs
import json
import os
import sys
import pprint


d = Dialog(dialog="dialog")
d.set_background_title("IOT LoRa Gateway Configurator")

if getpass.getuser() != "root":
    d.msgbox("This installer must be ran as root, please sudo to "
             "root and try again.")
    sys.exit(1)

d.msgbox("This installer script will ask you questions to setup your gateway."
         "\r\n \r\n At the same time on another device you will require to "
         "have already signed up to an account with The Things Network and "
         "created a gateway to fill out this script.", height=20, width=80)

#Open the configuration as old data so we can populate if the user has already
# entered data
configLocation = '/boot/iotloragateway/local_conf.json'
with open(configLocation, 'r') as f:
    olddata = json.load(f)

#Get the name
if(olddata["gateway_conf"]["servers"][0]["serv_gw_id"] !=
"<gateway name from console>"):
    gatewayIdDetails = d.inputbox("Please enter the Gateway ID that you setup "
                                  "with The Things Network",
                init=olddata["gateway_conf"]["servers"][0]["serv_gw_id"])
else:
    gatewayIdDetails = d.inputbox("Please enter the Gateway ID that you setup "
                                  "with The Things Network")
#Get the description
if(olddata["gateway_conf"]["description"] !=
"CHANGE-ME"):
    descriptionDetails = d.inputbox("Please enter a short description of the "
                                    "gateway.",
                  init=olddata["gateway_conf"]["description"])
else:
    descriptionDetails = d.inputbox("Please enter a short description of the "
                                    "gateway.")

#Get the users email address
if(olddata["gateway_conf"]["contact_email"] !=
"CHANGE-ME"):
    emailDetails = d.inputbox("Please enter a contact email address",
init=olddata["gateway_conf"]["contact_email"])
else:
    emailDetails = d.inputbox("Please enter a contact email address")


# Get The Frequency
frequencyDetails = d.menu("Please select the frequency of your gateway:",
                          choices=[("Europe", "868MHz"),
                                   ("Asia 1", "920-923MHz"),
                                   ("Asia 2", "923-925MHz"),
                                   ("Australia", "915MHz"),
                                   ("China", "470-510MHz"),
                                   ("India", "865-867MHz"),
                                   ("Korea", "920-923MHz"),
                                   ("United States", "915Mhz")
                                   ])
# Get the Server
serverDetails = d.menu("Please select the bridge for your gateway",
                       choices=[("Europe", "ttn-router-eu"),
                                ("United Kingdom",
                                 "digitalcatapult-uk-router"),
                                ("Australia", "meshed-router"),
                                ("Switzerland", "switch-router"),
                                ("SE Asia", "ttn-router-asia-se"),
                                ("Brazil", "ttn-router-brazil"),
                                ("Japan", "ttn-router-jp"),
                                ("US West", "ttn-router-us-west")
                                ])

#Get the users location
locationDetails = d.form("Location", [("Latitude", 1, 1, "", 1, 15, 12, 12),
                                      ("Longitude", 3, 1, "", 3, 15, 12, 12),
                                      ("Altitude", 5, 1, "", 5, 15, 5, 5)])

#Messagebox
if(olddata["gateway_conf"]["servers"][0]["serv_gw_key"] !=
"<gateway secret key from console>"):
    response = d.msgbox("Do you wish to update your TTN Key?",
             height=20, width=80)
    print(response)
    input()
else:
    d.msgbox("The configuration script will now ask you for your TTN Key from "
             "the console. Please paste it in and then press enter.",
             height=20, width=80)
    keyDetails = input("TTN Console Key: ")

d.msgbox("The configuration script will now configure the packet forwarder, "
         "enable SPI and confirm SSH is enabled for remote management.",
         height=20, width=80)

# Now lets set the arrays with each of the pins and servers and such
freqList = [
    ["Asia 1", "/boot/iotloragateway/global_confs/AS1-global_conf.json"],
    ["Asia 2", "/boot/iotloragateway/global_confs/AS1-global_conf.json"],
    ["Australia", "/boot/iotloragateway/global_confs/AU-global_conf.json"],
    ["China", "/boot/iotloragateway/global_confs/CN-global_conf.json"],
    ["Europe", "/boot/iotloragateway/global_confs/EU-global_conf.json"],
    ["India", "/boot/iotloragateway/global_confs/IN-global_conf.json"],
    ["Korea", "/boot/iotloragateway/global_confs/KR-global_conf.json"],
    ["United States", "/boot/iotloragateway/global_confs/US-global_conf.json"]
]
serverList = [
    ["United Kingdom", "ttn.thingsconnected.net"],
    ["Australia", "thethings.meshed.com.au"],
    ["Switzerland", "ttn.opennetworkinfrastructure.org"],
    ["SE Asia", "router.as.thethings.network"],
    ["Brazil", "router.brazil.thethings.network"],
    ["Europe", "router.eu.thethings.network"],
    ["Japan", "router.thethingsnetwork.jp"],
    ["US West", "router.us.thethings.network"]
]


freqDict = dict(freqList)
serverDict = dict(serverList)

# Now ready for setup!

# Build the local_conf.json file
shutil.copyfile("/boot/iotloragateway/global_confs/local_conf.json.template",
                "/boot/iotloragateway/local_conf.json")

# Generate a gateway UID
gatewayGenId = str.encode("IOT"+gatewayIdDetails[1][-5:])
gatewayGenId = codecs.encode(gatewayGenId, "hex")
configLocation = '/boot/iotloragateway/local_conf.json'
with open(configLocation, 'r') as f:
    data = json.load(f)

    server_address = serverDict[serverDetails[1]]
    # Lets set the easy stuff first
    data["gateway_conf"]["servers"][0]["serv_gw_id"] = gatewayIdDetails[1]
    data["gateway_conf"]["contact_email"] = emailDetails[1]
    data["gateway_conf"]["description"] = descriptionDetails[1]
    data["gateway_conf"]["ref_latitude"] = locationDetails[1][0]
    data["gateway_conf"]["ref_longitude"] = locationDetails[1][1]
    data["gateway_conf"]["ref_altitude"] = locationDetails[1][2]
    data["gateway_conf"]["servers"][0]["serv_gw_key"] = keyDetails
    data["gateway_conf"]["gateway_ID"] = gatewayGenId.decode()
    data["gateway_conf"]["servers"][0]["server_address"] = server_address

os.remove(configLocation)
with open(configLocation, 'w') as f:
    json.dump(data, f, indent=4)

# Copy the frequency plan over
boot_conf_file = "/boot/iotloragateway/global_conf.json"
shutil.copyfile(freqDict[frequencyDetails[1]], boot_conf_file)
st = os.stat("/opt/iotloragateway/iot-lora-gateway-reset.sh")
os.chmod("/opt/iotloragateway/iot-lora-gateway-reset.sh", st.st_mode | 0o111)

restart = d.pause("The system now will reboot to finish configuring your "
                    "gateway andautomatically start the forwarder."
                    "if you do not want to restart select cancel.")
